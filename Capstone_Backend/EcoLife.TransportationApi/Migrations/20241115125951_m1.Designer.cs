// <auto-generated />
using System;
using EcoLife.TransportationApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcoLife.TransportationApi.Migrations
{
    [DbContext(typeof(TransportationDbContext))]
    [Migration("20241115125951_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoLife.TransportationApi.Models.TransportationEntity", b =>
                {
                    b.Property<int>("TransportationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportationId"));

                    b.Property<double>("CNGUsage")
                        .HasColumnType("float");

                    b.Property<double>("DieselUsage")
                        .HasColumnType("float");

                    b.Property<double>("PetrolUsage")
                        .HasColumnType("float");

                    b.Property<DateTime>("RecordedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TransportEmission")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TransportationId");

                    b.ToTable("transportationEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
